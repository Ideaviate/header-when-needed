/*
 * Copyright (C) 2012 Ideaviate AB
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy 
 * of this software and associated documentation files (the "Software"), to deal 
 * in the Software without restriction, including without limitation the rights 
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell 
 * copies of the Software, and to permit persons to whom the Software is 
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all 
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, 
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN 
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
(function (e) { var t = "headerWhenNeeded", n, r, i = { init: function (n) { var i = e(this).filter(function () { return e(this).css("position") === "fixed" }), o = { activationYOffset: 100, visible: 2e3, animationDuration: 500, keepWhenHover: !0 }; return r = e.extend({}, o, n), e(window).on("scroll." + t, s.scroll(i)), s.addHoverTracker(i), e(this).data("visible", !0), i }, destroy: function () { return e(window).off("." + t), clearTimeout(n), this }, show: function () { return this.each(function (t, n) { e(n).animate({ marginTop: "0" }, r.animationDuration, function () { e(this).data("visible", !0) }) }) }, hide: function () { return this.each(function (n, i) { !e(i).data("hover") || !r.keepWhenHover ? e(i).animate({ marginTop: "-" + e(this).outerHeight() + "px" }, r.animationDuration, function () { e(this).data("visible", !1) }) : e(i).on("mouseleave." + t, s.scroll(e(this))) }) } }, s = { scroll: function (t) { return function () { e(window).scrollTop() > s.activationPoint() ? (clearTimeout(n), e(t).data("visible") || i.show.apply(t), n = setTimeout(function () { i.hide.apply(t) }, r.visible)) : (clearTimeout(n), i.show.apply(t)) } }, activationPoint: function () { if (r.activationElement) { var t = e(r.activationElement).first(); return t.height() } if (s.isPositiveInteger(r.activationYOffset)) return r.activationYOffset; e.error("Neither the activationElement- nor the activationYOffset option can be used, make sure your options are correct.") }, isPositiveInteger: function (e) { return /^\d+$/.test(e) }, addHoverTracker: function (n) { n.on("mouseenter." + t, function () { e(this).data("hover", !0) }).on("mouseleave." + t, function () { e(this).data("hover", !1) }).data("hover", !1) } }; e.fn.headerWhenNeeded = function (t) { if (i[t]) return i[t].apply(this, Array.prototype.slice.call(arguments, 1)); if (typeof t == "object" || !t) return i.init.apply(this, arguments); e.error("The plugin does not have a method called " + t) } })(jQuery)